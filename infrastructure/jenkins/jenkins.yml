Description:
  Jenkins CloudFormation template (EC2 instance).

Parameters:
  EnvironmentName:
    Description: EnvironmentName name, used as a prefix for resources
    Type: String

  WhiteListIP:
    Description: Whitelisted IP for SSH connection
    Type: String

  KeyPairJenkins:
    Description: KeyPair name to access Jenkins host via SSH
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: vitor-key


Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: HTTP and SSH access
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Sub ${WhiteListIP}
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-JSG

  Instance:
    Type: AWS::EC2::Instance
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt update
          sudo apt upgrade
          sudo apt-get install default-jdk wget -y
          cd /home/ubuntu
          sudo wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
          sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
          sudo apt-get update -y
          sudo apt-get install jenkins tidy -y
          sudo systemctl start jenkins
          sudo systemctl enable jenkins
          sudo systemctl status jenkins
      SecurityGroupIds:
        - Ref: SecurityGroup
      SubnetId:
        Fn::ImportValue: !Sub "${EnvironmentName}-SUBNET-1"
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeType: "gp2"
            VolumeSize: "10"
            DeleteOnTermination: true
      ImageId: ami-04932daa2567651e7
      InstanceType: t2.micro
      KeyName: !Sub ${KeyPairJenkins}

  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"

  EIPAssociation0:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
      - Instance
      - EIP
    Properties:
      InstanceId:
        Ref: Instance
      AllocationId:
        Fn::GetAtt:
          - EIP
          - AllocationId

Outputs:
  Website:
    Description: EC2 instance DNS
    Value: !Join ['', ['http://', !GetAtt 'Instance.PublicDnsName', ':8080']]